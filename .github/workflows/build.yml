name: .NET Build Test and Docker Deploy

on:
  push:
    branches: '**'
  pull_request:
    branches: [ main, develop ]
    types: [synchronize]


jobs:
  build:
    name: Build .Net
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          include-prerelease: True
          dotnet-version: '6.0'

      - name: Install dependencies
        run: dotnet restore

      - uses: actions/upload-artifact@v2
        with:
          name: csproj
          path: KavitaEmail/KavitaEmail.csproj
  stable:
    name: Build Docker and push
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:

      - name: Find Current Pull Request
        uses: jwalton/gh-find-current-pr@v1.0.2
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Get csproj Version
        uses: naminodarie/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: KavitaEmail/KavitaEmail.csproj

      - name: Echo csproj version
        run: echo "${{steps.get-version.outputs.assembly-version}}"

      - name: Parse Version
        run: |
          version='${{steps.get-version.outputs.assembly-version}}'
          newVersion=${version%.*}
          echo $newVersion
          echo "::set-output name=VERSION::$newVersion"
        id: parse-version

      - name: Compile dotnet app
        uses: actions/setup-dotnet@v1
        with:
          include-prerelease: True
          dotnet-version: '6.0'
      - run: ./monorepo-build.sh

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: kizaing/kavitaemail:latest, kizaing/kavitaemail:${{ steps.parse-version.outputs.VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}